<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAD
        dgAAA3YBfdWCzAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAkWSURBVHhe7d3L
        b1t1FgdwkBBbNuxALBlpVkj8BSMhFog9bFiOZjnzDyCNRmIo9MFDRfOsmqa0FEFLaUlL4jxI2rwTJ3Hs
        OI4TJ7bjt+O0oaQ0C378viY2zvXx4/7utZ34nMVHsn6+to/P+bZ27Ht9n1JKsRIIBJ6dWIj+bWIhdnNy
        IZYAXMYarqNu083IxW41NR99ddIb8+mhK5K+DttQt+1W5GI3uj+XfGlyIbpHDv6I6B62pe6jG5GLXehp
        PVxP9bBr8uA2lvvoSuRitxlf2H6FGPL+lDd2AXDZcp3Cbaj76jbkYreZXIj/2TrgqcXtP5Wux2Xr9bhN
        5X10K3Kx2+iBfmYZcJzYJm7Z5jPrNt2IXOw2epg9luH+cn8p8YfS9biMNcs2PZX30a3IRbdF7/U8o/1R
        e6VVVqY8byzNTLxFmZ7f+MEyXDXl3Vybm1v+O+Cy9XrchrovwGNRNbgIvXqG6qXbyEU36CfwsvaJNqE9
        1pTbtu5dUoHpETXt3TgyvHbAY+KxUQNVmwvQM/QOPXyZ6rEbyEUndLFPa3/V9jXqiblmaWaaHE47oQaq
        Npehl+ip63+akoumdIH4r35Ao56Eq8ITN8mBdAJqoWpsAfTW1ZcGctGULu7dimJbyj89Sg6jE1ALVWOL
        vEv13hS5aEIXhjcvBxWFttTS7Cw5jE5ALVSNLYIeu/YhFbloQhd1u6LIllucnSOH0QmohaqxhW5TMzBB
        LprQRWUsRZbFZ26odNirMpFlV2ysLKuR8aAaGAsdC6gFNVG1mkCv0DOql4cy1AxMkIt26YJetBRYtu39
        Tu3uHbgmuJ5T3/T7jiXURtVsCr2jenroRWoWdpGLduli3rQUV5bdWiWfnKnhyXWy+ccBaqNqNoXeUT09
        9CY1C7vIRbt0MW9biivLJaLkkzM170+SzT8OUBtVsyn0jurpobepWdhFLtqFYizFlbkdgFzhcbHR/aOr
        6u4PK8cCakFNqI2q2ZQEgDkJAHMSAOYkAMxJAJiTADAnAWBOAsCcBIA5CQBzEgDmJADMSQCYkwAwJwFg
        TgJgUyL9UA0Mz6nB0QWVyv5IbnOSSABsCEXS6oOPPlf/OHWh6P+97u6L2AkSgCZZh1+SzOxVbbvz4Ila
        jeTV0mrKsZX1nMrt/lz1GG6RADSh1vD/23OratvCwyeqfyyovvUsu+bWoF8lso+qHssNrAKQ1/+SIlF7
        u1XXGv7pj6+o9c1s1fYb8QI5RKe8AXd3Bi1hEwB/MKbOfHKlOLz/XLylooldcrtKdocPmfy+Hpi/aoBO
        rW3ukI/nFJsAXLpy98gQPzp/rW4I6g0/vJkhb1MSiuyoofE11TccdKx/bFUtBZPFlxbqsZxiE4CrX3mq
        hlkrBE6Gf9KwCcDqekq9d7qnaqjWENQa/ocff951wwc2AYAl/2bdENQdfqT7hg+sAgD1QsBt+MAuAFAr
        BFYf6kCsGQw/W3is1qK7KhDOtRU+fErm9smaamEZAGgUAtPh49367HJCTS/GOyaV+4msjcI2AFArBMXh
        b6TJ2zQST+2RQ2kn/E9A1UZhHQCwhsDJ8CH/4Gc149smB9Mu2+nq7ydqYR8A2NjKqZt946pvYEbFko0/
        IWwEr8P4JQ9fKN1W/nBWRZPNDx8kAMxJAJiTADAnAWBOAsCcBIA5CQBzEgDmJADMSQCYkwAYSOcfqexO
        89+4HWcSABvwVe/tu5Pqn2cuqVPnetXohI/c7iSRADQJw//y+vCRr40/OHdZ5Qr2dsA4biQATaCGXy8A
        gXC2uDs3tX+/XX0jQTW/nCgebmZ9HDdIABqoNXz4fmiuanvsjfPtID1MJ0Ibze/kYQebAGTyP6mhsQX1
        xdeDyuuLkNtY1Rv+je/ukbeJxHfJATq1uJIiH88pNgHAzh6VA+wbmCa3KzEZPhQeHijPeIgcoikcIWRn
        Pz872ATg3xduVg2yVghMh1+CEOAgUWrPXbtwmNnOAzk83HEAhu8tkgO1hsDp8E8aNgHAoeGXr/WTgy2F
        gNvwgU0AoFEIuA0fWAUA6oWAYjp87B6eyu23FY5Iomqph10AoNkQmA4/GMmr6cXOHBuA3cPtfGjEMgDQ
        KASmw8efa9Rg2mk91vyxDWwDALVC4OQ1P5XfJ4fSTutbBbI2CusAAEJw/daoeu/0xeK3fHc8M+R2duDv
        9yliMO2ATwzzu82/F2AfgJJEZk9l8u79FBvekCWzj9oKbwSpWuqRADAnAWBOAsCcBIA5CQBzEgDmJADM
        SQCYkwAwJwFgTgJgUzz5oPh9Qf/QXPEEUtQ2J4kEwIZgOKlOnbtc/taQOmXMSSMBaJJ1+CXUSaOwNxBO
        9jQfSDrmC6VUNt+6A1ElAE2oNXzqtHE7D5+ouyPunjQKp6BJZOSkUY4DgOP47P4MbK3hn/n0qopEqw/X
        irTopFHzfjlplKMA+ALR8vkA/nXhG7UZb3wSJrvDh+xOa04aFbaxl48dbAJw8cqdI0M8d/6LuiEwGX4J
        juYZngirOyMrjnnuh4rvA3DMAvVYTrEJwLXrg1XDrBUCJ8M/adgEAK/92OfPOlRrCDgNH9gEAJaDsboh
        4DZ8YBUAwBlEqRCcPX+V3fCBXQDAvxonQ2BlOvz0zmO1tlkonsChnXCSCuwdTNVUC8sAQKBBCEyHjw+C
        Zjt8yhg7IWAbAAiEttX7Z3tdGz7ISaOqkYt2oRhLcWWmAQBrCJy+5uPXPDp90qhE+keyNgr7AABOFIXf
        B/CMzJNf7tiVzu8X/xUuh7JthUPS4jaGDxIA5iQAzEkAmJMAMCcBYE4CwJwEgDkJAHMSAOYkAMxJAJiT
        ADAnAWBOAsCcBIC5kxSA1y3FlWUifvLJicbQO6qnh16nZmEXuWiXLuZ5S3Fl8ZkbqlCwtyOEOCj2DL2j
        enroeWoWdpGLJnRBW5YCfzd+WSV9QyoZGBPN0L1Cz8he/maLmoEJctGELqrXUqRonV5qBibIRRO6qBe0
        3YoiRWugxy9QMzBBLprShb1TUahojXeo3psiF53QBZ7VfqkoWLgDPT1L9dwJctEpXehrWuywcOEcevka
        1WunyEU36IKf0/6i/U/zagca9eRENfQKPUPv0MPnqB47p576FfT3r1YQp0+DAAAAAElFTkSuQmCC
</value>
  </data>
</root>